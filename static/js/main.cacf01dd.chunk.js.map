{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Container/Container.jsx","redux/contactsSlice.js","components/ContactForm/ContactForm.jsx","redux/actions.js","redux/selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Section/Section.jsx","components/App/App.jsx","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","addContact","newContact","body","name","number","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","ContactForm","useState","setName","setNumber","contacts","data","handleChange","event","target","value","resetForm","form","onSubmit","preventDefault","find","toast","error","success","label","input","type","pattern","title","required","onChange","formButton","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","actions","changeFilter","createAction","getFilter","filter","Filter","useSelector","dispatch","useDispatch","filterWrapper","e","ContactListItem","id","listItem","text","itemButton","onClick","ContactList","list","contact","toLowerCase","includes","map","Section","App","createReducer","_state","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cacf01dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3bxIz\",\"label\":\"Filter_label__8SiXJ\",\"input\":\"Filter_input__vyo3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1TG4I\",\"text\":\"ContactListItem_text__okOk_\",\"itemButton\":\"ContactListItem_itemButton__iG4lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3dBDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2VQF5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2QYsD\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61f3b58010f0f7001768c5ac.mockapi.io/',\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => `contacts`,\n      providesTags: ['Contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    addContact: builder.mutation({\n      query: newContact => ({\n        url: `/contacts`,\n        method: 'POST',\n        body: {\n          name: newContact.name,\n          number: newContact.number,\n        },\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation,\n} = contactsApi;\n","import { useState } from 'react';\r\nimport {\r\n  useFetchContactsQuery,\r\n  useAddContactMutation,\r\n} from 'redux/contactsSlice';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const { data: contacts } = useFetchContactsQuery();\r\n  const [addContact] = useAddContactMutation();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    if (name === 'name') setName(value);\r\n    if (name === 'number') setNumber(value);\r\n  };\r\n\r\n  const formSubmitHandler = data => {\r\n    if (contacts.find(({ name }) => name === data.name)) {\r\n      toast.error(`${data.name} is already in contacts!`);\r\n      return;\r\n    } else if (contacts.find(({ number }) => number === data.number)) {\r\n      toast.error(`${data.number} is already in contacts!`);\r\n      return;\r\n    }\r\n    toast.success('Contact added');\r\n    addContact({ name, number });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    resetForm();\r\n    formSubmitHandler({ name, number });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={s.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst actions = { changeFilter };\n\nexport default actions;\n","export const getFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/actions';\r\nimport { getFilter } from 'redux/selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(actions.changeFilter(e.target.value));\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\r\n\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactListItem({ name, number, id }) {\r\n  const [deleteContact] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p className={s.text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.itemButton}\r\n        type=\"button\"\r\n        onClick={() => deleteContact(id)}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n","import { useFetchContactsQuery } from 'redux/contactsSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport ContactListItem from 'components/ContactList/ContactListItem';\r\nimport s from './ContactList.module.css';\r\nimport { getFilter } from 'redux/selectors';\r\n\r\nexport default function ContactList() {\r\n  const { data: contacts } = useFetchContactsQuery();\r\n  const filter = useSelector(getFilter);\r\n\r\n  return (\r\n    <>\r\n      {contacts && (\r\n        <ul className={s.list}>\r\n          {contacts\r\n            .filter(contact =>\r\n              contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n            )\r\n            .map(contact => (\r\n              <ContactListItem key={contact.id} {...contact} />\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import Container from '../Container/Container';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport Section from 'components/Section';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <Section title=\"Phonebook\" />\r\n      <ContactForm />\r\n      <Section title=\"Contacts\" />\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n","import { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: '',\n  },\n};\n\nexport const filter = createReducer(initialState.contacts.filter, {\n  [actions.changeFilter]: (_state, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { filter } from './reducers';\nimport logger from 'redux-logger';\nimport { contactsApi } from './contactsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    filter,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n    logger,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App.jsx';\nimport { store } from 'redux/store.js';\nimport 'modern-normalize';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__25QEg\",\"label\":\"ContactForm_label__1MLHj\",\"input\":\"ContactForm_input__33YcH\",\"formButton\":\"ContactForm_formButton__2cx-k\"};"],"sourceRoot":""}