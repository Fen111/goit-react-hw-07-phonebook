{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Container/Container.jsx","redux/selectors.js","redux/actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Section/Section.jsx","components/App/App.jsx","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","getItems","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","actions","addContact","createAction","payload","number","id","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","contacts","useSelector","dispatch","useDispatch","handleChange","event","target","value","resetForm","form","onSubmit","data","preventDefault","find","alert","nanoid","label","input","type","pattern","title","required","onChange","formButton","Filter","filterWrapper","e","ContactListItem","onDeleteContact","text","itemButton","onClick","ContactList","list","map","listItem","Section","App","initialState","createReducer","state","_","combineReducers","contactsPersistConfig","key","storage","blacklist","persistedReducer","persistReducer","rootReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b6c59838.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3bxIz\",\"label\":\"Filter_label__8SiXJ\",\"input\":\"Filter_input__vyo3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactListItem_text__okOk_\",\"itemButton\":\"ContactListItem_itemButton__iG4lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2VQF5\",\"listItem\":\"ContactList_listItem__32vsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3dBDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2QYsD\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","export const getItems = ({ items }) => items;\nexport const getFilter = ({ filter }) => filter;\n\nexport const getVisibleContacts = ({ items, filter }) => {\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', ({ name, number, id }) => ({\n  payload: {\n    name,\n    number,\n    id,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst actions = { addContact, deleteContact, changeFilter };\n\nexport default actions;\n","import { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getItems } from '../../redux/selectors';\r\nimport actions from 'redux/actions';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    if (name === 'name') setName(value);\r\n    if (name === 'number') setNumber(value);\r\n  };\r\n\r\n  const formSubmitHandler = data => {\r\n    if (contacts.find(({ name }) => name === data.name)) {\r\n      alert(`${data.name} is already in contacts!`);\r\n      return;\r\n    } else if (contacts.find(({ number }) => number === data.number)) {\r\n      alert(`${data.number} is already in contacts!`);\r\n      return;\r\n    }\r\n    dispatch(actions.addContact({ name, number, id: nanoid() }));\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    formSubmitHandler({ name, number });\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={s.formButton} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/actions';\r\nimport { getFilter } from 'redux/selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(actions.changeFilter(e.target.value));\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactListItem({ name, number, id, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <p className={s.text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.itemButton}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      ></button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ContactListItem from 'components/ContactList/ContactListItem';\r\nimport s from './ContactList.module.css';\r\nimport { getVisibleContacts } from 'redux/selectors';\r\nimport actions from 'redux/actions';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.listItem} key={id}>\r\n          <ContactListItem\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import Container from '../Container/Container';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport Section from 'components/Section';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <Section title=\"Phonebook\" />\r\n      <ContactForm />\r\n      <Section title=\"Contacts\" />\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: '',\n  },\n};\n\nconst items = createReducer(initialState.contacts.items, {\n  [actions.addContact]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer(initialState.contacts.filter, {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { getDefaultMiddleware, configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: 'filter',\n};\n\nconst persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App/App.jsx';\nimport { store, persistor } from 'redux/store.js';\nimport 'modern-normalize';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__25QEg\",\"label\":\"ContactForm_label__1MLHj\",\"input\":\"ContactForm_input__33YcH\",\"formButton\":\"ContactForm_formButton__2cx-k\"};"],"sourceRoot":""}