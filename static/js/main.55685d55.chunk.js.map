{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Container/Container.jsx","redux/selectors.js","redux/actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Section/Section.jsx","components/App/App.jsx","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","getItems","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","actions","addContact","createAction","payload","id","nanoid","deleteContact","changeFilter","ContactForm","useState","setName","number","setNumber","contacts","useSelector","dispatch","useDispatch","handleChange","event","target","value","resetForm","form","onSubmit","data","preventDefault","find","alert","label","input","type","pattern","title","required","onChange","formButton","Filter","filterWrapper","e","ContactListItem","listItem","text","itemButton","onClick","onDeleteContact","ContactList","list","map","Section","App","initialState","createReducer","state","_","combineReducers","contactsPersistConfig","key","storage","blacklist","persistedReducer","persistReducer","rootReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.55685d55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3bxIz\",\"label\":\"Filter_label__8SiXJ\",\"input\":\"Filter_input__vyo3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1TG4I\",\"text\":\"ContactListItem_text__okOk_\",\"itemButton\":\"ContactListItem_itemButton__iG4lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3dBDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2VQF5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2QYsD\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = ({ items }) => items;\nexport const getFilter = ({ filter }) => filter;\n\nexport const getVisibleContacts = createSelector(\n  getItems,\n  getFilter,\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\n\nconst addContact = createAction('contacts/add', payload => ({\n  payload: {\n    ...payload,\n    id: nanoid(),\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst actions = { addContact, deleteContact, changeFilter };\n\nexport default actions;\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getItems } from '../../redux/selectors';\r\nimport actions from 'redux/actions';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    if (name === 'name') setName(value);\r\n    if (name === 'number') setNumber(value);\r\n  };\r\n\r\n  const formSubmitHandler = data => {\r\n    if (contacts.find(({ name }) => name === data.name)) {\r\n      alert(`${data.name} is already in contacts!`);\r\n      return;\r\n    } else if (contacts.find(({ number }) => number === data.number)) {\r\n      alert(`${data.number} is already in contacts!`);\r\n      return;\r\n    }\r\n    dispatch(actions.addContact({ name, number }));\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    formSubmitHandler({ name, number });\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={s.formButton} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/actions';\r\nimport { getFilter } from 'redux/selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(actions.changeFilter(e.target.value));\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from 'redux/actions';\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactListItem({ name, number, id }) {\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p className={s.text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.itemButton}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport ContactListItem from 'components/ContactList/ContactListItem';\r\nimport s from './ContactList.module.css';\r\nimport { getVisibleContacts } from 'redux/selectors';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} name={name} number={number} id={id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import Container from '../Container/Container';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport Section from 'components/Section';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <Section title=\"Phonebook\" />\r\n      <ContactForm />\r\n      <Section title=\"Contacts\" />\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: '',\n  },\n};\n\nconst items = createReducer(initialState.contacts.items, {\n  [actions.addContact]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [actions.deleteContact]: (state, { payload }) => {\n    return state.filter(contact => contact.id !== payload);\n  },\n});\n\nconst filter = createReducer(initialState.contacts.filter, {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { getDefaultMiddleware, configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducers';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: 'filter',\n};\n\nconst persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './components/App/App.jsx';\r\nimport { store, persistor } from 'redux/store.js';\r\nimport 'modern-normalize';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__25QEg\",\"label\":\"ContactForm_label__1MLHj\",\"input\":\"ContactForm_input__33YcH\",\"formButton\":\"ContactForm_formButton__2cx-k\"};"],"sourceRoot":""}